[ 
    [   
        {
            "Number": 100,
            "Question": "Amber Turing was hoping for Frothly (her beer company) to be acquired by a potential competitor which fell through, but visited their website to find contact information for their executive team. What is the website domain that she visited? Answer example: google.com",
            "Hints": "Search for\nindex=botsv2 earliest=0 amber\nand examine the client_ip field to find Amber's IP address.\nUse a query like this to see her Web traffic, using her correct IP address:\n\tindex=botsv2 earliest=0 src_ip=1.1.1.1 \nRestrict this query to the stream:http sourcetype. There are 198 events.\nLook at the site values and look for names of rival beer makers.",
            "Points": 10,
            "Answer": "www.berkbeer.com"
        },
        {
            "Number": 101,
            "Question": "Amber found the executive contact information and sent him an email. What is the CEO's name? Provide the first and last name.",
            "Hints": "Look for emails to Amber Turing.\n\nFind emails from aturing that were sent to the domain from question 100.\nLook at the sourcetype=stream:smtp and filter on the sender=aturing@froth.ly and/or recipient=aturing@froth.ly. Look at the content and body of emails that have something to do with competitors. The name of the CEO should be in the email.",
            "Points": 10,
            "Answer": "Martin Berk"
        },
        {
            "Number": 102,
            "Question": "After the initial contact with the CEO, Amber contacted another employee at this competitor. What is that employee's email address?",
            "Hints": "Look at Amber's email traffic.\nFind the last email from the domain in question 100.",
            "Points": 10,
            "Answer":"hbernhard@berkbeer.com"
        },
        {
            "Number": 103,
            "Question": "What is the name of the file attachment that Amber sent to a contact at the competitor?",
            "Hints": "Look for emails sent from Amber Turing.\nLook for aturing@froth.ly sending email to the address listed in question 102.\nSearch sourcetype=stream:smtp sender=aturing@froth.ly and find the attachment she sent.",
            "Points": 10,
            "Answer": "Saccharomyces_cerevisiae_patent.docx"
        },
        {
            "Number": 104,
            "Question": "What is Amber's personal email address?",
            "Hints": "Look for emails sent from Amber Turing.\nReview the body of emails that Amber has sent.\nReview the email with base64-encoded text for body (or content) and decode the base64.",
            "Points": 15,
            "Answer": "ambersthebest@yeastiebeastie.com"
        },
        {
            "Number": 105,
            "Question": "What version of TOR did Amber install to obfuscate her web browsing? Answer guidance: Numeric with one or more delimiter.",
            "Hints": "",
            "Points": 15,
            "Answer": "7.0.4"
        }
    ],
    [
        {
            "Number": 200,
            "Question": "What is the public IPv4 address of the server running www.brewertalk.com?",
            "Hints": "A Splunk Stream forwarder running in the Frothly on-prem environment would observe http traffic destined for www.brewertalk.com as having an internet routable IP address.",
            "Points": 10,
            "Answer": "52.42.208.228"
        },
        {
            "Number": 201,
            "Question": "Provide the IP address of the system used to run a web vulnerability scan against www.brewertalk.com.",
            "Hints": "App scanners are often 'noisy' and therefore easy to detect with automated correlation searches.\nDrill down into contributing events if you can!",
            "Points": 15,
            "Answer": "45.77.65.211"
        },
        {
            "Number": 202,
            "Question": "The IP address from question 201 is also being used by a likely different piece of software to attack a URI path. What is the URI path? Answer guidance: Include the leading forward slash in your answer. Do not include the query string or other parts of the URI. Answer example: /phpinfo.php",
            "Hints": "Analyze all HTTP traffic from the scanning system to www.brewertalk.com, and inspect the different HTTP user agents. A different HTTP user agent often indicates a different HTTP client program was in use.\n\nFor each HTTP user agent, inspect the URI that the user agent is interacting with.",
            "Points": 10,
            "Answer": "/member.php"
        },
        {
            "Number": 203,
            "Question": "What SQL function is being abused on the uri path from question 202?",
            "Hints": "SQL stands for Structured Query Language and it is used to interact with relational databases like mysql. Some common terms in SQL include 'SELECT' 'WHERE' 'FROM' and 'JOIN'.\n\nSQL injection vulnerabilities can arise when a programmer does not properly check user input for characters that might have an impact on how the underlying database query is assembled in his or her code. A single quote character provided as input to a web page ' is often a tell-tale sign of a SQL injection attack.\n\nXML is one of many data formats that can be stored in relational databases like mysql. Some SQL commands in the MySQL database can be used to produce an error that leaks database contents. Look for a SQL command that updates XML.",
            "Points": 10,
            "Answer": "updatexml"
        },
        {
            "Number": 204,
            "Question": "What is Frank Ester's password salt value on www.brewertalk.com?",
            "Hints": "Narrow down the events to only those that include the suspected SQL injection traffic. Stream HTTP events contain the details you need. Filter on the source IP, dest, IP, HTTP user agent and URI path.\nThese events will probably make a lot more sense if you reverse the Splunk event ordering by piping your search results to the reverse command. This will show you the first SQL injection commands at the top of the list and later events below.\n\nThere is a lot of data captured in these events. You are looking for two pieces of data in the dest_content field. The first can be found following the string 'XPATH syntax error: '\n\nThe other important piece of data in the dest_content field can be extracted with the following regular expression: '\n\nQuery:\n\t\\s+\n\t\\s+(?[^<]+)' Look for the sqli_query values that are stealing salt values.",
            "Points": 20,
            "Answer": "gGsxysZL"
        },
        {
            "Number": 207,
            "Question": "What was the value of the cookie that Kevin's browser transmitted to the malicious URL as part of a XSS attack? Answer guidance: All digits. Not the cookie name or symbols like an equal sign.",
            "Hints": "Check out sourcetype=stream:htt\n\nInspect the uri_query field.",
            "Points": 10,
            "Answer": "1502408189"
        },
        {
            "Number": 208,
            "Question": "The brewertalk.com web site employed Cross Site Request Forgery (CSRF) techniques. What was the value of the anti-CSRF token that was stolen from Kevin Lagerfield's computer and used to help create an unauthorized admin user on brewertalk.com?",
            "Hints": "Anti-CSRF tokens are usually hidden form elements set when the browser loads an HTML page containing a form. If the form is submitted without the anti-CSRF token, the backend code of the website rejects the transaction as it might have come from a malicious source rather than from a legitimate user of the form.\n\nOne of the many ways that an attacker can abuse a cross site scripting vulnerability is to use it to defeat CSRF protections. If you carefully inspect XSS attacks in the data set, you will stumble on some malicious code that is stealing the anti-CSRF token.\n\nOn brewertalk.com, users created with usergroup=4 are administrators.\n\nThe name of the anti-CSRF token is my_post_key",
            "Points": 20,
            "Answer": "1bc3eab741900ab25c98eee86bf20feb"
        },
        {
            "Number": 209,
            "Question": "What brewertalk.com username was maliciously created by a spearphishing attack?",
            "Hints": "The attacker was trying to masquerade as something that would look legitimate to a casual observer.\n\nThe attacker stole a trick from domain squatters by using a homograph attack. More info on homograph attacks can be found on Wikipedia.\n\nThe password of this new, unauthorized, malicious administrative account is beer_lulz",
            "Points": 15,
            "Answer": "kIagerfield"
        }
    ],
    [
        {
            "Number": 300,
            "Question": "According to Frothly's records, what is the likely MAC address of Mallory's corporate MacBook? Answer guidance: Her corporate MacBook has the hostname MACLORY-AIR13.",
            "Hints": "Use Asset Center in ES.",
            "Points": 10,
            "Answer": "00:0c:29:f6:f3:ed"
        },
        {
            "Number": 301,
            "Question": "What episode of Game of Thrones is Mallory excited to watch? Answer guidance: Submit the HBO title of the episode.",
            "Hints": "Look for video files downloaded to MACLORY-AIR13.",
            "Points": 10,
            "Answer": "Stormborn"
        },
        {
            "Number": 304,
            "Question": "Considering the threatlist you found in the question above, and related data, what protocol often used for file transfer is actually responsible for the generated traffic?",
            "Hints": "Do you see MACLORY-AIR13 communicating with known Tor addresses? That's misleading.",
            "Points": 10,
            "Answer": "BitTorrent"
        },
        {
            "Number": 305,
            "Question": "Mallory's critical PowerPoint presentation on her MacBook gets encrypted by ransomware on August 18. At what hour, minute, and second does this actually happen? Answer guidance: Provide the time in PDT. Use the 24h format HH:MM:SS, using leading zeroes if needed. Do not use Splunk's _time (index time).",
            "Hints": "People that work on PowerPoint presentations generally save them in their Documents folder.\nThe time that Splunk indexed this information might not be the time the file was modified.",
            "Points": 15,
            "Answer": "14:50:22"
        },
        {
            "Number": 306,
            "Question": "How many seconds elapsed between the time the ransomware executable was written to disk on MACLORY-AIR13 and the first local file encryption? Answer guidance: Use the index times (_time) instead of other timestamps in the events.",
            "Hints": "What time did the 'Office 2016 Patcher.app' get added to MACLORY-AIR13's filesystem?\nWhat time was the first file with *.crypt added to MACLORY-AIR13's filesystem?",
            "Points": 15,
            "Answer": "132"
        },
        {
            "Number": 307,
            "Question": "Kevin Lagerfield used a USB drive to move malware onto kutekitten, Mallory's personal MacBook. She ran the malware, which obfuscates itself during execution. Provide the vendor name of the USB drive Kevin likely used. Answer Guidance: Use time correlation to identify the USB drive.",
            "Hints": "osquery_results is a great sourcetype to review.\nLook for unusual files in a place that Mallory would come across them.\nIf you can figure out what kind of malware this is, do some open source intelligence research to determine how it behaves. Find an online database of USB vendors.\n\nVarious sourcetypes can tell you how things look when the run. Look at 'ps' and look at 'osquery_results' from kutekitten.",
            "Points": 15,
            "Answer": "Alcor"
        },
        {
            "Number": 308,
            "Question": "What programming language is at least part of the malware from the question above written in?",
            "Hints": "What programming language is at least part of the malware from the question above written in?",
            "Points": 15,
            "Answer": "Perl"
        },
        {
            "Number": 309,
            "Question": "The malware from the two questions above appears as a specific process name in the process table when it is running. What is it?",
            "Hints": "Review the hints for question 307",
            "Points": 10,
            "Answer": "java"
        },
        {
            "Number": 310,
            "Question": "The malware infecting kutekitten uses dynamic DNS destinations to communicate with two C&C servers shortly after installation. What is the fully-qualified domain name (FQDN) of the first (alphabetically) of these destinations?",
            "Hints": "Have a look at the stream:dns sourcetype and observe queries from kutekitten.\n\nYou need a lookup. Find one, and also review this: https://www.splunk.com/blog/2015/08/04/detecting-dynamic-dns-domains-in-splunk.html",
            "Points": 10,
            "Answer": "eidk.duckdns.org"
        },
        {
            "Number": 311,
            "Question": "From the question above, what is the fully-qualified domain name (FQDN) of the second (alphabetically) contacted C&C server?",
            "Hints": "Review the hints for question 310.",
            "Points": 10,
            "Answer": "eidk.hopto.org"
        }
    ],
    [
        {
            "Number": 400,
            "Question": "A Federal law enforcement agency reports that Taedonggang often spearphishes its victims with zip files that have to be opened with a password. What is the name of the attachment sent to Frothly by a malicious Taedonggang actor?",
            "Hints": "Frothly uses the Splunk wiredata product 'Stream' to collect email metadata. Look at the sourcetype stream:smtp\nThe question mentions that Taedonggang sends a 'zip' file. Look in the sourcetype in hint 1 for attachments with a .zip extension.",
            "Points": 10,
            "Answer": "invoice.zip"
        },
        {
            "Number": 401,
            "Question": "The Taedonggang APT group encrypts most of their traffic with SSL. What is the 'SSL Issuer' that they use for the majority of their traffic? Answer guidance: Copy the field exactly, including spaces.",
            "Hints": "You might need to get more information before you tackle this question. Have you figured out the IP address of Taedonggang's server?\nFrothly currently only collects SSL data with Stream. Look at the sourcetype 'stream:TCP' for more information about SSL data.\n\nIssuer' is a value found in a TLS/SSL certificate. Try and find SSL/TLS certificates tied to the IP address of Taedonggang's attacking server.\n\nLook in sourcetype=stream:tcp with the IP address of Taedonggang and the field ssl_issuer.",
            "Points": 10,
            "Answer": "C = US"
        },
        {
            "Number": 403,
            "Question": "Based on the IP address found in question 402, what domain of interest is associated with that IP address?",
            "Hints": "Investigations might shed some light on this.\nDid you know Enterprise Security has the ability to collect notes and screenshots from other analysts including threat intelligence?\nFind the investigation with the attachment to gain some additional intelligence about the threat.",
            "Points": 10,
            "Answer": "hildegardsfarm.com"
        },
        {
            "Number": 404,
            "Question": "What unusual file (for an American company) does winsys32.dll cause to be downloaded into the Frothly environment?",
            "Hints": "",
            "Points": 10,
            "Answer": "나는_데이비드를_사랑한다.hwp"
        },
        {
            "Number": 405,
            "Question": "What is the first and last name of the poor innocent sap who was implicated in the metadata of the file that executed PowerShell Empire on the first victim's workstation? Answer example: John Smith",
            "Hints": "This is an open source intelligence question. You will need to find the file name/hash of the file that first infected Frothly (think of the extracted file from the answer to question 400) and then pivot off to the internet. If you have found the file that first infected Frothly with PowerShell Empire take a look at the Incident Review dashboard. You should find the hash and pivot off that hash in open source intelligence sources. Look at the chart in https://www.splunk.com/blog/2017/07/21/work-flow-ing-your-osint.html for a commonly-used sandbox site that takes file hashes.\nFind the answer to question 400. Look in the logs to find the name of document file extracted from the zipped attachment. Search for that filename in the Incident Review 'Search' filter. Take the hash mentioned in the 'comments' field and search Virustotal for that hash.",
            "Points": 15,
            "Answer": "Ryan Kovar"
        },
        {
            "Number": 407,
            "Question": "To maintain persistence in the Frothly network, Taedonggang APT configured several Scheduled Tasks to beacon back to their C2 server. What single webpage is most contacted by these Scheduled Tasks? Answer guidance: Remove the path and type a single value with an extension. Answer example: index.php or images.html",
            "Hints": "Review the question for keywords and search against the hosts in the network.\nLook in the sysmon logs for workstations: XmlWinEventLog:Microsoft-Windows-Sysmon/Operational if you haven't figured out where to start!\n\nOnce you find the event for scheduled tasks, you will need to pivot to the sourcetype=WinRegistry. In that sourcetype, look for where the scheduled task receives its destination information. You will need to decode it!",
            "Points": 20,
            "Answer": "process.php"
        },
        {
            "Number": 409,
            "Question": "The Taedonggang group had several issues exfiltrating data. Determine how many bytes were successfully transferred in their final, mostly successful attempt to exfiltrate files via a method using TCP, using only the data available in Splunk logs. Use 1024 for byte conversion.",
            "Hints": "The data for this question is located in sourcetype=stream:ftp\n\nReview the sourcetype referenced in hint one on August 25, 2017. You'll notice four distinct bursts of activity. Look at the largest one for the information you require. Find the start message in the logs (there is no stop). A key word is 'successful'.\n\nThe data is NOT in a Splunk field of 'bytes'. You will need to write a regex against the data to find the answer. Review https://www.splunk.com/blog/2017/08/30/rex-groks-gibberish.html if you need help writing a regex!\n\nThe information in the field you are parsing will have something like 'Megabytes per second' and 'Kilobytes' per second. Make sure you do your calculations with those terms in mind.",
            "Points": 20,
            "Answer": "1394847505"
        }
    ],
    [
        {
            "Number": 500,
            "Question": "Individual clicks made by a user when interacting with a website are associated with each other using session identifiers. You can find session identifiers in the stream:http sourcetype. The Frothly store website session identifier is found in one of the stream:http fields and does not change throughout the user session. What session identifier is assigned to dberry398@mail.com when visiting the Frothly store for the very first time? Answer guidance: Provide the value of the field, not the field name.",
            "Hints": "Find the source IP address that our user of interest is using, then broaden your search such that you can view all events specific to the user's src ip address.\nHTTP cookies often contain information specific to a user session, including session identifiers.\n\nAfter you get the events specific to the user's src ip address, you can append a '| reverse |table cookie' to get a better view of the cookies that the user clicked.",
            "Points": 10,
            "Answer": "lwh9Ql7oUbnJUqxR"
        },    
        {
            "Number": 501,
            "Question": "How many unique user ids are associated with a grand total order of $1000 or more?",
            "Hints": "When a user fills out a web form passing information such as username, password, credit card numbers, etc., it's passed via a standard http field (form_data) which is captured by stream:http. Extract the username from that field and store it in a new field.\nYou're going to need to look deeper into the packet at a field called dest_content to extract the grand order total. Look for the following string and use it in a regular expression to capture the value: 'grand_total'.\n\nThe 'stats' command is useful for helping you to link several pieces of context together that occur within a single clickstream.",
            "Points": 15,
            "Answer": "7"
        },    
        {
            "Number": 502,
            "Question": "Which user, identified by their email address, edited their profile before placing an order over $1000 in the same clickstream? Answer guidance: Provide the user ID, not other values found from the profile edit, such as name.",
            "Hints": "Explore the stream:http data and try to determine what sort of context you can derive from the name of pages that the user is visiting.\nThe uri_path field will tell you which pages either the user has clicked on and provide hints as to what their session looks like. Spend some time looking through the various uri_path values or get clever and think about keywords that may lead you to the uri_path value that indicates a user editing their account profile.\n\nThis looks interesting: '/magento2/customer/account/editPost/",
            "Points": 15,
            "Answer": "bkildcare@yandex.com"
        },    
        {
            "Number": 503,
            "Question": "What street address was used most often as the shipping address across multiple accounts, when the billing address does not match the shipping address? Answer example: 123 Sesame St ",
            "Hints": "Perform all field extractions involving information of interest first before joining the events together and applying further constraints. The usernames and passwords need to be extracted from the form_data field. The shipping and billing address can be found in the src_content field.\nUse the stats command to create a list of interesting context by session identifier. Remember to apply your constraints after the stats command to look at sessions where the shipping and billing address are both present in the session and they are not equal to each other.\n\nUsers who have made a purchase in the past automatically have previous shipping destinations displayed in their browser, which can be found in the stream:http field src_content. After the user changes their shipping address, you will see a different value displayed for the shipping address. If you are fixated on the first shipping address found within a stream, you are going to be stuck. Take a look in this url for the user-modified shipping address during the payment process: http://store.froth.ly/magento2/rest/default/V1/carts/mine/payment-information",
            "Points": 15,
            "Answer": ""
        },
        {
            "Number": 504,
            "Question": "What is the domain name used in email addresses by someone creating multiple accounts on the Frothly store website (http://store.froth.ly) that appear to have machine-generated usernames?",
            "Hints": "Extract the session identifier from the form_key field and use it to tie together context of interest.The usernames and passwords need to be extracted from the form_data field. Here is an example of how to extract the domain from a sample splUsername field: |rex field=splUsername '(?[^\\.|^\\@]+.[^.]+)$'\n\nTake a look at Enterprise Security and you might find a notable event related to the web store identifying anomalous activity.",
            "Points": 15,
            "Answer": "elude.in"
        },
        {
            "Number": 505,
            "Question": "Which user ID experienced the most logins to their account from different IP address and user agent combinations? Answer guidance: The user ID is an email address.",
            "Hints": "Use the rex command to grab the username and session identifier from the cookie and form_data fields.\nSince we are looking for unique combinations of IP and user agent, it's helpful to combine those two values into a single field. One way to do this is to use the eval command. https://answers.splunk.com/answers/100463/adding-strings-from-2-fields-into-1.html After you get your context listed by session identifier, you can run stats a second time to further narrow your results down to the unique IP and user agent combination.",
            "Points": 10,
            "Answer": ""
        },
        {
            "Number": 506,
            "Question": "What is the most popular coupon code being used successfully on the site?",
            "Hints": "The coupon codes need to be extracted from the request field.\nYou will need to dig a little deeper to determine whether or not a coupon submission was successful. Take a look in the dest_content to figure that out.\nUse the eval command to create a field name to store whether a coupon submission was successful. If you can find strings in the dest_content indicative of success or failure, you can use this example as a framework: eval newField=if(like(dest_field,'%your_search_string%'),'Success',dest_field)",
            "Points": 20,
            "Answer": ""
        },
        {
            "Number": 507,
            "Question": "Several user accounts sharing a common password is usually a precursor to undesirable scenario orchestrated by a fraudster. Which password is being seen most often across users logging into http://store.froth.ly.",
            "Hints": "All the context you need to get this question is in the cookie and form_data fields.\nForget about the session identifier for this question. Use stats to get your context lined up 'by password'\nUse the stats aggregate function 'dc' to get a distinct count of the values within a particular field. Example: ...|stats dc(field1) as distinct_count by field2",
            "Points": 10,
            "Answer": "HardwareBasedEasterEggs2017"
        },
        {
            "Number": 508,
            "Question": "Which HTML page was most clicked by users before landing on http://store.froth.ly/magento2/checkout/ on August 19th? Answer guidance: Use earliest=1503126000 and latest=1503212400 to identify August 19th. Answer example: http://store.froth.ly/magento2/bigbrew.html",
            "Hints": "Set your date range appropriately and look for events containing the desired URL.\nThe answer is directly referrenced within the events containing the specified URL.\n\nThe http_referrer field will tell us which page the user was on just prior to landing on the specified checkout page.",
            "Points": 15,
            "Answer": "http://store.froth.ly/magento2/mens-frothly-tee.html"
        },
        {
            "Number": 509,
            "Question": "Which HTTP user agent is associated with a fraudster who appears to be gaming the site by unsuccessfully testing multiple coupon codes?",
            "Hints": "The coupon codes need to be extracted from the request field.\nYou will need to dig a little deeper to determine whether or not a coupon submission was successful. Take a look in the dest_content to figure that out.\nUse the eval command to create a field name to store whether a coupon submission was successful. If you can find a strings in the dest_content indicative of success or failure, you can use this example as a framework: eval newField=if(like(dest_field,'%your_search_string%'),'Success',dest_field)",
            "Points": 20,
            "Answer": "Mozilla/5.0 (Windows NT 6.333; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
        }
    ]
]




